version: '3.8'

services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.15
    container_name: kafka-retry-example-redpanda
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp
      - "1"
      - --memory
      - "1G"
      - --reserve-memory
      - "0M"
      - --node-id
      - "0"
      - --kafka-addr
      - "PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092"
      - --advertise-kafka-addr
      - "PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092"
      - --pandaproxy-addr
      - "0.0.0.0:8082"
      - --advertise-pandaproxy-addr
      - "localhost:8082"
      - --rpc-addr
      - "0.0.0.0:33145"
      - --advertise-rpc-addr
      - "redpanda:33145"
    ports:
      - "9092:9092"     # Kafka API
      - "8081:8081"     # Schema Registry
      - "8082:8082"     # REST Proxy
      - "9644:9644"     # Admin API
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster info"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  console:
    image: docker.redpanda.com/redpandadata/console:v2.2.4
    container_name: kafka-retry-example-console
    ports:
      - "8080:8080"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      KAFKA_BROKERS: redpanda:29092
    volumes:
      - ./console-config.yml:/tmp/config.yml:ro
    depends_on:
      redpanda:
        condition: service_healthy

  example-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kafka-retry-example-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - KAFKA_BROKERS=redpanda:29092
      - PORT=3000
    depends_on:
      redpanda:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  redpanda_data:

networks:
  default:
    name: kafka-retry-example-network